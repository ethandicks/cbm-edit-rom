; PET/CBM EDIT ROM - Standard Zero Page locations/variables/storage
; ================
; Descriptions are from Butterfield's memory maps from Transactor

Basic_USR 	= $00		;USR Jump
USRADD 	= $01		;USR Jump
CHARAC 	= $03		;Search Character
ENDCHR 	= $04		;Scan between Quotes Flag
COUNT 	= $05		;Input buffer pointer. # of subscripts
DIMFLG 	= $06		;Default DIM flag
VALTYP 	= $07		;Type: FF=string, 00=numeric
INTFLG 	= $08		;Type: 80=integer, 00=floating point
GARBFL 	= $09		;Flag: DATA scan; List quote; memory
SUBFLG 	= $0a		;Flag: Subscript; FNX flag
INPFLG 	= $0b		;0=input; $40=GET; $98=READ
TANSGN 	= $0c		;ATN sign/Comparison Evaluation Flag
DS_1 		= $0d		;Disk Status DS$ descriptor
DS_2 		= $0e		;Disk Status DS$ descriptor
DS_3 		= $0f		;Disk Status DS$ descriptor
IOPMPT 	= $10		;Current i/o device for prompt suppress
LINNUM 	= $11		;Integer value (for SYS, GOTO etc)
TEMPPT 	= $13		;Pointers for descriptor stack
LASTPT 	= $14		
TEMPST 	= $16		;Descriptor stack (temp strings)
INDEXA 	= $1f		;Utility pointer area
INDEXB 	= $21
FAC3EX 	= $23		;Product area for multiplication
FAC3M1 	= $24		
FAC3M2 	= $25
FAC3M3 	= $26
FAC3M4 	= $27
TXTTAB 	= $28		;Pointer: Start of BASIC
VARTAB 	= $2a		;Pointer: Start of Variables
ARYTAB 	= $2c		;Pointer: Start of Arrays
STREND 	= $2e		;Pointer: End of Arrays
FRETOP 	= $30		;Pointer: String Storage (moving down)
FRESPC 	= $32		;Pointer: Utility string
MEMSIZ 	= $34		;Pointer: Limit of Memory
CURLIN 	= $36		;Current BASIC line number
OLDLIN 	= $38		;Previous BASIC line number
OLDTXT 	= $3a		;Pointer: BASIC statement for CONT
DATLIN 	= $3c		;Current DATA line number
DATPTR 	= $3e		;Current DATA address
INPPTR 	= $40		;Input Vector
VARNAM 	= $42		;Current variable name
VARPTR 	= $44		;Current variable address
FORPNT 	= $46		;Variable pointer for FOR/NEXT
YSAVE 	= $48		;Y-Save; op-save; BASIC pointer save
ACCSYM 	= $4a		;Comparison symbol accumulator
FUNCPT 	= $4b		;Misc work area/pointers
DESCPT 	= $4d
GARBSS 	= $50
JUMPER 	= $51		;Jump vector for functions
FUNJMP 	= $52		
FACTPA 	= $54		;Misc numeric work area
TMPPTA 	= $55
TMPPTB 	= $57
FACTPB 	= $59
TMPVA2 	= $5a
TMPPTC 	= $5c
FAC1EX 	= $5e		;Accum#1: Exponent
FAC1M1 	= $5f		;Accum#1: Mantissa
FAC1M2 	= $60
FAC1M3 	= $61
FAC1M4 	= $62
FAC1SI 	= $63		;Accum#1: Sign
SGNFLG 	= $64		;Series evaluation constant pointer
BITS 		= $65		;Accum#1: hi-order (overflow)
FAC2EX 	= $66	
FAC2M1 	= $67
FAC2M2 	= $68
FAC2M3 	= $69
FAC2M4 	= $6a
FAC2SI 	= $6b
STRPTR	= $6c
FAC1M5 	= $6d
TMPPTD 	= $6e
CHRGET 	= $70
CHRGOT 	= $76
TXTPTR 	= $77
ISNUM 	= $7d
RNDX 		= $88
JIFFY_CLOCK = $8d
CINV 		= $90
CBINV 	= $92
NMINV 	= $94
STATUS	= $96
KEYPRESSED = $97
KEYFLAGS	= $98
JIFFY_CORR	= $99
STKEY		= $9b
SVXT		= $9c
VERCK		= $9d
CharsInBuffer 	= $9e
ReverseFlag 	= $9f
C3PO 		= $a0
LastInputCol = $a1
InputRow 	= $a3
InputCol 	= $a4
BSOUR 	= $a5
Key_Image	= $a6
Blink		= $a7
BLNCT		= $a8
CursorChar	= $a9
BlinkPhase	= $aa
SYNO		= $ab
CRSW		= $ac
TEMPX		= $ad
LDTND		= $ae
DFLTN		= $af
DFLTO		= $b0
PRTY		= $b1
DPSW		= $b2
SAVELA	= $b3
TIMCMD	= $b4
MONCNT	= $b5
TMPZB7	= $b7
TMPZB9	= $b9
TMPZBA	= $ba
BUFPNT	= $bb
INBIT		= $bd
BITCI		= $be
RINONE	= $bf
PTR1		= $c0
PTR2		= $c1
RIDATA	= $c2
RIPRTY	= $c3
ScrPtr	= $c4
CursorCol	= $c6
SAL		= $c7
EAL		= $c9
CMP0		= $cb
BLNSW		= $cc
QuoteMode	= $cd
BITTS		= $ce
EOT		= $cf
READERR	= $d0
FNLEN		= $d1
LA		= $d2
SA		= $d3
FA		= $d4
RigMargin	= $d5
TAPE1		= $d6
CursorRow	= $d8
DATAX		= $d9
FNADR		= $da
INSRT		= $dc
ROPRTY	= $dd
FSBLK		= $de
MYCH		= $df
TopMargin	= $e0
BotMargin	= $e1
LefMargin	= $e2
XMAX		= $e3
RPTFLG	= $e4
KOUNT		= $e5
DELAY		= $e6		; New key marker
CHIME		= $e7		; Chime Time
HOMECT	= $e8		; Home count
SCRIV		= $e9		; Screen Input Vector
SCROV		= $eb		; Screen Output Vector
JIFFY6DIV5	= $f8
CAS1		= $f9
CAS2		= $fa
STAL		= $fb
MEMUSS	= $fd
